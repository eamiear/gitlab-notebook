{"./":{"url":"./","title":"简介","keywords":"","body":"GitLab NoteBook GitLab 使用记录 "},"install.html":{"url":"install.html","title":"安装","keywords":"","body":"安装 系统环境： CentOS 6 gitlab版本: ce | 11.11.0 安装 安装配置依赖 下面命令同时打开防火墙系统的HTTP和SSH权限。 sudo yum install -y curl policycoreutils-python openssh-server cronie sudo lokkit -s http -s ssh 安装Postfix启动邮件通知服务。 sudo yum install postfix sudo service postfix start sudo chkconfig postfix on 添加GitLab包仓库并安装 添加仓库： curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash 安装： sudo EXTERNAL_URL=\"https://gitlab.example.com\" yum -y install gitlab-ce EXTERNAL_URL 指定外部访问地址，安装时会自动配置，并将该地址作为GitLab访问入口。 如果使用https://地址，GitLab自动生成相关证书文件。如果使用自己的证书，用http://即可。 访问登陆 浏览器地址栏输入EXTERNAL_URL的地址进行访问，首次访问需要重置管理员密码，管理员账号为 root。密码重置完后重新登陆。 参考 Omnibus package installation "},"localization.html":{"url":"localization.html","title":"汉化","keywords":"","body":"汉化 查看当前GitLab版本 [root@kz /]# cat /opt/gitlab/embedded/service/gitlab-rails/VERSION 11.11.0 下载汉化包 用wget下载： wget https://gitlab.com/xhang/gitlab/-/archive/11-11-stable-zh/gitlab-11-11-stable-zh.tar 或手工下载再上传: https://gitlab.com/xhang/gitlab 解压汉化包： # 当前目录路经为/opt/gitlab/embedded/service/ [root@kz service]# tar -xvf gitlab-11-11-stable-zh.tar 备份gitlab文件 [root@kz service]# tar -cvf gitlab-rails-bak.rar gitlab-rails/* 汉化包替换覆盖 [root@kz service]# cp -rf gitlab-11-10-stable-zh/* /opt/gitlab/embedded/service/gitlab-rails/ cp: cannot overwrite non-directory '/opt/gitlab/embedded/service/gitlab-rails/log' with directory 'gitlab-11-10-stable-zh/log' cp: cannot overwrite non-directory '/opt/gitlab/embedded/service/gitlab-rails/tmp' with directory 'gitlab-11-10-stable-zh/tmp' 重载配置 [root@kz service]# gitlab-ctl reconfigure 重启 [root@kz service]# gitlab-ctl restart 常见问题 cp 出现覆盖提示 查看命令别名列表： [root@kz conf]# alias -p alias cp='cp -i' alias l.='ls -d .* --color=auto' cp -i 表示文件覆盖时提示。 取消别名： [root@kz conf]# unalias cp "},"use-local-nginx.html":{"url":"use-local-nginx.html","title":"使用本地Nginx","keywords":"","body":"使用本地NGINX 禁用自带NGINX，并将UNIX套接字改为TCP端口 禁用内置Nginx 在/etc/gitlab/gitlab.rb中设置： nginx['enable'] = false 设置 web-server 外部用户 在/etc/gitlab/gitlab.rb中设置： web_server['external_users'] = ['root'] gitlab 默认不设置外部web服务用户，需要自行配置。 上面的root为nginx用户名，在/nginx/conf/nginx.conf文件查看： [root@kz conf]# cat nginx.conf user root; ... 配置Web服务信任代理 web-server跟GitLab服务不在同一机器上时，代理列表应该填入Web服务的IP地址： gitlab_rails['trusted_proxies'] = [ '192.168.1.0/24', '192.168.2.1', '2001:0db8::/32' ] 使用Apache服务时，设置gitlab-workhorse（可选） Apache无法连接UNIX套接字，需替换成连接TCP端口。 在/etc/gitlab/gitlab.rb中设置： # 默认8181端口 gitlab_workhorse['listen_network'] = \"tcp\" gitlab_workhorse['listen_addr'] = \"127.0.0.1:9000\" 重载配置及重启 gitlab-ctl reconfigure gitlab-ctl restart 配置本机nginx代理 找到nginx配置文件，如/usr/local/nginx/conf/nginx.conf，添加代理配置： upstream gitlab_server{ server localhost:9000; keepalive 50; } server { listen 80; server_name iot.on-bright.com; charset utf-8; location / { root html; index index.html index.htm; proxy_pass http://gitlab_server; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } } 注意： gitlab的访问需要一级目录？ 如果路由配置为/gitlab，访问时会找不到文件。 重启nginx: ./nginx -s reload 常规命令 查看网络状态 netstat -tunlp 查看gitlab执行日志 gitlab-ctl tail 附件 nginx配置 nginx.conf gitlab配置 gitlab.rb 参考 Using a non-bundled web-server "},"email.html":{"url":"email.html","title":"启用邮件","keywords":"","body":"启动邮件 "},"runner.html":{"url":"runner.html","title":"Runner","keywords":"","body":"Runner 安装 Runner 添加 GitLab 官方仓库： # For RHEL/CentOS/Fedora curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh | sudo bash 安装最新版本的GitLab Runner，或跳到下一步骤安装指定版本 # For RHEL/CentOS/Fedora sudo yum install gitlab-runner 安装特定版本的GitLab Runner # for RPM based systems yum list gitlab-runner --showduplicates | sort -r sudo yum install gitlab-runner-10.0.0-1 注册Runner Runner 有五种类型： shared - 执行所有未分配项目的作业 group - 执行所在组所有未分配项目的作业 specific - 执行已分配项目的作业 locked - Runner不能分配给其他项目 paused - Runner不能接收任何新作业 注册共享Runner 管理员账号才能注册共享Runner，且仅能注册一个。 在 admin/runners页上获取共享Runner token 注册操作 注册完成后，admin/runners页面看到runner记录 添加子域名(泛域名解析) 在服务器上添加域名解析，如阿里云等 *.page.xxx.com 192.168.22.23 配置好后，用户可通过username.page.xxx.com访问pages 修改gitlab配置文件 vi /etc/gitlab/gitlab.rb pages_external_url \"http://page.xxx.com\" gitlab_pages['enable'] = true 执行gitlab重配置、重启命令: gitlab-ctl reconfigure gitlab-ctl restart 配置成功，则admin页面上的 GitLab Pages项处于启用状态 编写 .gitlab-ci.yml 文件 项目需要使用Pages功能时，在根目录下添加并填写 .gitlab-ci.yml 文件。 注册流程 执行下面命令： [root@kz gitlab]# gitlab-runner register 输入GitLab实例URL（admin/runner页中的链接）： [root@kz gitlab]# gitlab-runner register Runtime platform arch=amd64 os=linux pid=14694 revision=ac2a293c version=11.11.2 Running in system-mode. Please enter the gitlab-ci coordinator URL (e.g. https://gitlab.com/): http://47.110.228.131/ 输入token（admin/runners页上获取）: Please enter the gitlab-ci token for this runner: D3s24_Nsx4HoABtA19yfSBkd 输入Runner描述，后续可在页面上修改 Please enter the gitlab-ci description for this runner: [iZbp19xg5vv2b5wnt0avavZ]: shared-runner 输入Runner标签，后续可在GitLab平台修改 Please enter the gitlab-ci tags for this runner (comma separated): shared Registering runner... succeeded runner=D_Nsx4Ho 选择执行器 不确定选择哪个就选择 shell Please enter the executor: docker, virtualbox, docker+machine, docker-ssh+machine, docker-ssh, parallels, shell, ssh, kubernetes: shell 全部脚本： [root@kz gitlab]# gitlab-runner register Runtime platform arch=amd64 os=linux pid=15281 revision=ac2a293c version=11.11.2 Running in system-mode. Please enter the gitlab-ci coordinator URL (e.g. https://gitlab.com/): http://47.110.228.131/ Please enter the gitlab-ci token for this runner: D3s24_Nsx4HoABtA19yfSBkd Please enter the gitlab-ci description for this runner: [iZbp19xg5vv2b5wnt0avavZ]: ob-shared-runner Please enter the gitlab-ci tags for this runner (comma separated): shared Registering runner... succeeded runner=D_Nsx4Ho Please enter the executor: docker, virtualbox, docker+machine, docker-ssh+machine, docker-ssh, parallels, shell, ssh, kubernetes: shell Runner registered successfully. Feel free to start it, but if it's running already the config should be automatically reloaded! 参考 Installing the Runner Registering Runners Registering a shared Runner GitLab Pages "},"pages.html":{"url":"pages.html","title":"使用Pages","keywords":"","body":"Gitlab pages 配置 添加子域名(泛域名解析) 在服务器上添加域名解析，如阿里云等 *.page.xxx.com 192.168.22.23 配置好后，用户可通过username.page.xxx.com访问pages 修改gitlab配置文件 vi /etc/gitlab/gitlab.rb pages_external_url \"http://page.xxx.com\" gitlab_pages['enable'] = true 执行gitlab重配置、重启命令: gitlab-ctl reconfigure gitlab-ctl restart 配置成功，则admin页面上的 GitLab Pages项处于启用状态 编写 .gitlab-ci.yml 文件 项目需要使用Pages功能时，在根目录下添加并填写 .gitlab-ci.yml 文件。 参考 GitLab Pages "}}